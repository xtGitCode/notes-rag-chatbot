name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to AWS ECR (Backend)
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_BACKEND }}

      - name: Build Docker image (Backend)
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_BACKEND }}:latest ./backend

      - name: Tag Docker image (Backend)
        run: |
          docker tag ${{ secrets.ECR_REPOSITORY_BACKEND }}:latest ${{ secrets.ECR_REPOSITORY_BACKEND }}:latest

      - name: Push Docker image to AWS ECR (Backend)
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_BACKEND }}:latest

      - name: Log in to AWS ECR (Frontend)
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_FRONTEND }}

      - name: Build Docker image for Frontend
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_FRONTEND }}:latest ./frontend

      - name: Tag Docker image for Frontend
        run: |
          docker tag ${{ secrets.ECR_REPOSITORY_FRONTEND }}:latest ${{ secrets.ECR_REPOSITORY_FRONTEND }}:latest

      - name: Push Docker image for Frontend to AWS ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_FRONTEND }}:latest

      - name: Initialize EB CLI (if not initialized already)
        run: |
          pip install awsebcli
          eb init -p docker --region ${{ secrets.AWS_REGION }} --no-verify-ssl --application-name "Notes Chat"
          eb use NotesChat-env

      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy
